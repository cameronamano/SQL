# In this SQL, I'm querying a database with multiple tables in it to quantify statistics about employee and customer sales data for Chinook Music Services.

#1. List customers who are not located in the US.
SELECT * FROM chinook.customers
    WHERE Country !='USA';
    
#2. List only the customers from Brazil.
SELECT * FROM chinook.customers
    WHERE Country='Brazil';
    
#3. Find the invoices of the customers who are from Brazil.
SELECT firstname, lastname, invoiceid, invoicedate, billingcountry FROM chinook.invoices
    JOIN chinook.customers
        ON chinook.customers.customerid = chinook.invoices.customerid
    WHERE billingcountry='Brazil';        

#4. List the employees who are Sales Agents.
SELECT * FROM chinook.employees
    WHERE Title LIKE '%Agent';
    
#5. List all of the billing countries from the invoice table.
SELECT DISTINCT billingcountry FROM chinook.invoices
    ORDER BY billingcountry ASC;
    
#6. Provide a query that shows the invoices associated with each sales agent.
SELECT emp.lastname AS 'Employee_Last_Name', emp.firstname AS 'Employee_First_Name', inv.invoiceid AS 'Invoice_ID'
    FROM chinook.employees emp
    JOIN chinook.customers cust ON emp.employeeid = cust.supportrepid
    JOIN chinook.invoices inv ON inv.customerid = cust.customerid;
    
#7. Show the invoice total, customer name, country, and sales agent for each invoice and customer.
SELECT inv.total AS 'Invoice_Total', cust.lastname AS 'Customer_Last_Name', cust.firstname AS 'Customer_First_Name', inv.billingcountry AS 'Billing_Country', emp.lastname AS 'Sales_Agent_Last_Name', emp.firstname AS 'Sales_Agent_First_Name'
    FROM chinook.invoices inv
    JOIN chinook.customers cust ON inv.customerid = cust.customerid
    JOIN chinook.employees emp ON emp.employeeid = cust.supportrepid;
    
#8. How many invoices were created in 2009?
SELECT COUNT(InvoiceId) FROM invoices
    WHERE invoicedate LIKE '2009%';
    
#9. What are the total sales for 2009?
SELECT SUM(Total) FROM invoices
    WHERE invoicedate LIKE '2009-%';
    
#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.name AS 'Track_Name', invitems.invoicelineid AS 'Invoice_Line_ID'
    FROM tracks
    JOIN invoice_items invitems ON invitems.trackid = tracks.trackid;
    
#11. Write a query that includes the purchashed track name and artist name with each invoice line ID.
SELECT tracks.name AS 'Track_Name', tracks.composer AS 'Artist', invitems.invoicelineid AS 'Invoice_Line_ID'
    FROM tracks
    JOIN invoice_items invitems ON invitems.trackid = tracks.trackid;
    
#12. Provide a query that show3s all the tracks along with album name, media type, and genre.
SELECT tracks.name AS 'Track_Name', albums.title AS 'Album', media_types.name AS 'Media_Type', genres.name AS 'Genre'
    FROM tracks
    JOIN albums ON albums.albumid = tracks.AlbumId
    JOIN media_types ON media_types.mediatypeid = tracks.mediatypeid
    JOIN genres ON genres.genreid = tracks.genreid;
    
#13. Show the total sales made by each sales agent.
SELECT emp.lastname AS 'Sales Agent Last Name', emp.firstname AS 'Sales Agent First Name', SUM(inv.Total) AS 'Total Sales'
    FROM invoices inv
    JOIN customers cust ON inv.customerid = cust.customerid
    JOIN employees emp ON emp.employeeid = cust.supportrepid
    GROUP BY emp.lastname
    ORDER BY SUM(inv.Total) DESC;
    
#14. Which sales agent made the most money in sales in 2009?
SELECT emp.lastname AS 'Sales Agent Last Name', emp.firstname AS 'Sales Agent First Name', SUM(inv.total) AS 'Total 2009 Sales'
    FROM invoices inv
    JOIN customers cust ON inv.customerid = cust.customerid
    JOIN employees emp ON emp.employeeid = cust.supportrepid
    WHERE invoicedate LIKE '2009%'
        AND emp.title LIKE '%Agent%'
    GROUP BY emp.lastname
    ORDER BY SUM(inv.total) DESC LIMIT 1;
